name: QRCode application workflow
on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/main.yml'
      - 'pom/xml'
      - 'Dockerfile'
      - 'deploy.sh'
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/main.yml'
      - 'pom/xml'
      - 'Dockerfile'
      - 'deploy.sh'

jobs:
  project-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn clean install

      - name: Run tests
        run: mvn clean --batch-mode --update-snapshots verify

  docker-build:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - project-build
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into the Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: hendisantika/qrcode-generator:${{ github.run_number }}

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - docker-build
    steps:
      - uses: actions/checkout@v4
      - name: Add Server key
        run: |
          touch key.txt && echo "${{ secrets.SERVER_KEY }}" > key.txt
          chmod 600 key.txt
      - name: Set all environment variables
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          IMAGE_NAME: qrcode-generator
          IMAGE_TAG: ${{ github.run_number }}
          CONTAINER_NAME: qrcode-generator
          APP_SERVER_PORT: ${{ vars.APP_SERVER_PORT_DEV }}
        run: |
          echo CONTAINER_NAME=$CONTAINER_NAME >> .env
          echo IMAGE_NAME=$IMAGE_NAME >> .env
          echo IMAGE_TAG=$IMAGE_TAG >> .env
          echo APP_SERVER_PORT=$APP_SERVER_PORT >> .env

      - name: Copy all environment variables
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "./.env"  # Path to the file on your runner
          target: "~/qrcode"  # Target directory on the server

      - name: Deploy the application
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SERVER_USER: ${{ secrets.SERVER_USERNAME }}
        run: |
          set -e
          cd $GITHUB_WORKSPACE
          #          ./home/deployer/qrcode/deploy.sh
          ./deploy.sh
